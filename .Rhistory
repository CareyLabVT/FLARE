p_chance22[j] <- prob_zero[which(as.POSIXct(full_time) == as.POSIXct("2019-10-22 07:00:00",tz='EST'))]
}
if(length(prob_zero[which(as.POSIXct(full_time) == as.POSIXct("2019-10-21 07:00:00",tz='EST'))])>0){
p_chance21[j] <- prob_zero[which(as.POSIXct(full_time) == as.POSIXct("2019-10-21 07:00:00",tz='EST'))]
}
if(length(prob_zero[which(as.POSIXct(full_time) == as.POSIXct("2019-10-20 07:00:00",tz='EST'))])>0){
p_chance20[j] <- prob_zero[which(as.POSIXct(full_time) == as.POSIXct("2019-10-20 07:00:00 EDT",tz='EST'))]
}
if(length(prob_zero[which(as.POSIXct(full_time) == as.POSIXct("2019-10-19 07:00:00",tz='EST'))])>0){
p_chance19[j] <- prob_zero[which(as.POSIXct(full_time) == as.POSIXct("2019-10-19 07:00:00",tz='EST'))]
}
day_chance[j] <- j - 16
#line <- readline()
}
xdata = rev(c(as.POSIXct("2019-10-24 07:00:00", tz = "EST"),
as.POSIXct("2019-10-23 07:00:00", tz = "EST"),
as.POSIXct("2019-10-22 07:00:00", tz = "EST"),
as.POSIXct("2019-10-21 07:00:00", tz = "EST"),
as.POSIXct("2019-10-20 07:00:00", tz = "EST"),
as.POSIXct("2019-10-19 07:00:00", tz = "EST"),
as.POSIXct("2019-10-18 07:00:00", tz = "EST"),
as.POSIXct("2019-10-17 07:00:00", tz = "EST"),
as.POSIXct("2019-10-16 07:00:00", tz = "EST"),
as.POSIXct("2019-10-15 07:00:00", tz = "EST"),
as.POSIXct("2019-10-14 07:00:00", tz = "EST"),
as.POSIXct("2019-10-13 07:00:00", tz = "EST"),
as.POSIXct("2019-10-12 07:00:00", tz = "EST"),
as.POSIXct("2019-10-11 07:00:00", tz = "EST"),
as.POSIXct("2019-10-10 07:00:00", tz = "EST")))
xdata = rev(c(as.POSIXct("2019-10-23 07:00:00", tz = "EST"),
as.POSIXct("2019-10-22 07:00:00", tz = "EST"),
as.POSIXct("2019-10-21 07:00:00", tz = "EST"),
as.POSIXct("2019-10-20 07:00:00", tz = "EST"),
as.POSIXct("2019-10-19 07:00:00", tz = "EST"),
as.POSIXct("2019-10-18 07:00:00", tz = "EST"),
as.POSIXct("2019-10-17 07:00:00", tz = "EST"),
as.POSIXct("2019-10-16 07:00:00", tz = "EST"),
as.POSIXct("2019-10-15 07:00:00", tz = "EST"),
as.POSIXct("2019-10-14 07:00:00", tz = "EST"),
as.POSIXct("2019-10-13 07:00:00", tz = "EST"),
as.POSIXct("2019-10-12 07:00:00", tz = "EST"),
as.POSIXct("2019-10-11 07:00:00", tz = "EST"),
as.POSIXct("2019-10-10 07:00:00", tz = "EST")))
d1 <- tibble(x = c(xdata[1:14],xdata[1:14],xdata[1:14],xdata[1:14], xdata[1:14]),
p = c(p_chance19[1:14],p_chance20[1:14],p_chance21[1:14],p_chance22[1:14], p_chance23[1:14]),
type = c(rep("Oct 19",length(xdata[1:14])),rep("Oct 20",length(xdata[1:14])),rep("Oct 21",length(xdata[1:14])),rep("Oct 22",length(xdata[1:14])),rep("Oct 23",length(xdata[1:14]))))
ggplot(d1, aes(x = x, y = p, color = type)) +
geom_point() +
geom_line() +
xlim(as.POSIXct("2019-10-10"),as.POSIXct("2019-10-24")) +
geom_vline(aes(xintercept = as.POSIXct("2019-10-23 05:42:00", tz = "EST"))) +
scale_x_datetime(name = "Day",
limits = c(as.POSIXct("2019-10-10"),as.POSIXct("2019-10-24")),
breaks = seq(as.POSIXct("2019-10-10"),as.POSIXct("2019-10-24"), by = "2 day"),
labels = c("Oct 10", "Oct 12", "Oct 14", "Oct 16", "Oct 18", "Oct 20", "Oct 22","Oct 24")) +
labs(y = "Forecasted % chance of turnover\non specified date", title = "Forecasted day of turnover", tag = "b") +
scale_colour_discrete(name  = "Day of turnover") +
ylim(0, 100) +
theme_bw()
ggplot(d1, aes(x = x, y = p, color = type)) +
geom_point() +
geom_line() +
xlim(as.POSIXct("2019-10-10"),as.POSIXct("2019-10-24")) +
geom_vline(aes(xintercept = as.POSIXct("2019-10-23 05:42:00", tz = "EST"))) +
scale_x_datetime(name = "Day",
limits = c(as.POSIXct("2019-10-10"),as.POSIXct("2019-10-24")),
breaks = seq(as.POSIXct("2019-10-10"),as.POSIXct("2019-10-24"), by = "2 day"),
labels = c("Oct 10", "Oct 12", "Oct 14", "Oct 16", "Oct 18", "Oct 20", "Oct 22","Oct 24")) +
labs(y = "Forecasted % chance of water quality event\non specified date", title = "Forecasted day of water quality (iron) event", tag = "b") +
scale_colour_discrete(name  = "Day of water quality event") +
ylim(0, 100) +
theme_bw()
ggplot(d1, aes(x = x, y = p, color = type)) +
geom_point() +
geom_line() +
xlim(as.POSIXct("2019-10-10"),as.POSIXct("2019-10-24")) +
geom_vline(aes(xintercept = as.POSIXct("2019-10-23 05:42:00", tz = "EST"))) +
scale_x_datetime(name = "Day",
limits = c(as.POSIXct("2019-10-10"),as.POSIXct("2019-10-24")),
breaks = seq(as.POSIXct("2019-10-10"),as.POSIXct("2019-10-24"), by = "2 day"),
labels = c("Oct 10", "Oct 12", "Oct 14", "Oct 16", "Oct 18", "Oct 20", "Oct 22","Oct 24")) +
labs(y = "Forecasted % chance of water quality event\non specified date", title = "Forecasted day of water quality (iron) event", tag = "b") +
scale_colour_discrete(name  = "Day of water\nquality event") +
ylim(0, 100) +
theme_bw()
ggplot(d1, aes(x = x, y = p, color = type)) +
geom_point() +
geom_line() +
xlim(as.POSIXct("2019-10-10"),as.POSIXct("2019-10-24")) +
geom_vline(aes(xintercept = as.POSIXct("2019-10-23 05:42:00", tz = "EST"))) +
scale_x_datetime(name = "Day",
limits = c(as.POSIXct("2019-10-10"),as.POSIXct("2019-10-24")),
breaks = seq(as.POSIXct("2019-10-10"),as.POSIXct("2019-10-24"), by = "2 day"),
labels = c("Oct 10", "Oct 12", "Oct 14", "Oct 16", "Oct 18", "Oct 20", "Oct 22","Oct 24")) +
labs(y = "Forecasted % chance of water quality event\non specified date", title = "Forecasted day of water quality (iron) event", tag = "b") +
scale_colour_discrete(name  = "Forecasted day of \n water quality event") +
ylim(0, 100) +
theme_bw()
ggplot(d1, aes(x = x, y = p, color = type)) +
geom_point() +
geom_line() +
xlim(as.POSIXct("2019-10-10"),as.POSIXct("2019-10-24")) +
geom_vline(aes(xintercept = as.POSIXct("2019-10-23 05:42:00", tz = "EST"))) +
scale_x_datetime(name = "Day",
limits = c(as.POSIXct("2019-10-10"),as.POSIXct("2019-10-24")),
breaks = seq(as.POSIXct("2019-10-10"),as.POSIXct("2019-10-24"), by = "2 day"),
labels = c("Oct 10", "Oct 12", "Oct 14", "Oct 16", "Oct 18", "Oct 20", "Oct 22","Oct 24")) +
labs(y = "Forecasted % chance of water quality event\non specified date", title = "Forecasted day of water quality (iron) event", tag = "b") +
scale_colour_discrete(name  = "Forecasted day of \n water quality event") +
ylim(0, 100) +
theme_bw() +
annotate("text", x=as.POSIXct("2019-10-23"), y=90, label= "boat")
ggplot(d1, aes(x = x, y = p, color = type)) +
geom_point() +
geom_line() +
xlim(as.POSIXct("2019-10-10"),as.POSIXct("2019-10-24")) +
geom_vline(aes(xintercept = as.POSIXct("2019-10-23 05:42:00", tz = "EST"))) +
scale_x_datetime(name = "Day",
limits = c(as.POSIXct("2019-10-10"),as.POSIXct("2019-10-24")),
breaks = seq(as.POSIXct("2019-10-10"),as.POSIXct("2019-10-24"), by = "2 day"),
labels = c("Oct 10", "Oct 12", "Oct 14", "Oct 16", "Oct 18", "Oct 20", "Oct 22","Oct 24")) +
labs(y = "Forecasted % chance of water quality event\non specified date", title = "Forecasted day of water quality (iron) event", tag = "b") +
scale_colour_discrete(name  = "Forecasted day of \n water quality event") +
ylim(0, 100) +
theme_bw() +
annotate("text", x=as.POSIXct("2019-10-23"), y=90, label= "observed water\nquality event")
ggplot(d1, aes(x = x, y = p, color = type)) +
geom_point() +
geom_line() +
xlim(as.POSIXct("2019-10-10"),as.POSIXct("2019-10-24")) +
geom_vline(aes(xintercept = as.POSIXct("2019-10-23 05:42:00", tz = "EST"))) +
scale_x_datetime(name = "Day",
limits = c(as.POSIXct("2019-10-10"),as.POSIXct("2019-10-24")),
breaks = seq(as.POSIXct("2019-10-10"),as.POSIXct("2019-10-24"), by = "2 day"),
labels = c("Oct 10", "Oct 12", "Oct 14", "Oct 16", "Oct 18", "Oct 20", "Oct 22","Oct 24")) +
labs(y = "Forecasted % chance of water quality event\non specified date", title = "Forecasted day of water quality (iron) event", tag = "b") +
scale_colour_discrete(name  = "Forecasted day of \n water quality event") +
ylim(0, 100) +
theme_bw() +
annotate("text", x=as.POSIXct("2019-10-21"), y=90, label= "observed water\nquality event")
ggplot(d1, aes(x = x, y = p, color = type)) +
geom_point() +
geom_line() +
xlim(as.POSIXct("2019-10-10"),as.POSIXct("2019-10-24")) +
geom_vline(aes(xintercept = as.POSIXct("2019-10-23 05:42:00", tz = "EST"))) +
scale_x_datetime(name = "Day",
limits = c(as.POSIXct("2019-10-10"),as.POSIXct("2019-10-24")),
breaks = seq(as.POSIXct("2019-10-10"),as.POSIXct("2019-10-24"), by = "2 day"),
labels = c("Oct 10", "Oct 12", "Oct 14", "Oct 16", "Oct 18", "Oct 20", "Oct 22","Oct 24")) +
labs(y = "Forecasted % chance of water quality event\non specified date", title = "Forecasted day of water quality (iron) event", tag = "b") +
scale_colour_discrete(name  = "Forecasted day of \n water quality event") +
ylim(0, 100) +
theme_bw() +
annotate("text", x=as.POSIXct("2019-10-21"), y=95, label= "observed water\nquality event")
ggplot(d1, aes(x = x, y = p, color = type)) +
geom_point() +
geom_line() +
xlim(as.POSIXct("2019-10-10"),as.POSIXct("2019-10-24")) +
geom_vline(aes(xintercept = as.POSIXct("2019-10-23 05:42:00", tz = "EST"))) +
scale_x_datetime(name = "Day",
limits = c(as.POSIXct("2019-10-10"),as.POSIXct("2019-10-24")),
breaks = seq(as.POSIXct("2019-10-10"),as.POSIXct("2019-10-24"), by = "2 day"),
labels = c("Oct 10", "Oct 12", "Oct 14", "Oct 16", "Oct 18", "Oct 20", "Oct 22","Oct 24")) +
labs(y = "Forecasted % chance of water quality event\non specified date", title = "Forecasted day of water quality (iron) event", tag = "b") +
scale_colour_discrete(name  = "Forecasted day of \n water quality event") +
ylim(0, 100) +
theme_bw() +
annotate("text", x=as.POSIXct("2019-10-21"), y=95, label= "observed water\nquality event") +
annotate("segment", x = as.POSIXct("2019-10-21"), xend = as.POSIXct("2019-10-23"), y = 95, yend = 95, colour = "black", size=3, alpha=0.6, arrow=arrow())
ggplot(d1, aes(x = x, y = p, color = type)) +
geom_point() +
geom_line() +
xlim(as.POSIXct("2019-10-10"),as.POSIXct("2019-10-24")) +
geom_vline(aes(xintercept = as.POSIXct("2019-10-23 05:42:00", tz = "EST"))) +
scale_x_datetime(name = "Day",
limits = c(as.POSIXct("2019-10-10"),as.POSIXct("2019-10-24")),
breaks = seq(as.POSIXct("2019-10-10"),as.POSIXct("2019-10-24"), by = "2 day"),
labels = c("Oct 10", "Oct 12", "Oct 14", "Oct 16", "Oct 18", "Oct 20", "Oct 22","Oct 24")) +
labs(y = "Forecasted % chance of water quality event\non specified date", title = "Forecasted day of water quality (iron) event", tag = "b") +
scale_colour_discrete(name  = "Forecasted day of \n water quality event") +
ylim(0, 100) +
theme_bw() +
annotate("text", x=as.POSIXct("2019-10-21"), y=95, label= "observed water\nquality event") +
annotate("segment", x = as.POSIXct("2019-10-21"), xend = as.POSIXct("2019-10-23"), y = 95, yend = 95, colour = "black", size=1, alpha=1.0, arrow=arrow())
ggplot(d1, aes(x = x, y = p, color = type)) +
geom_point() +
geom_line() +
xlim(as.POSIXct("2019-10-10"),as.POSIXct("2019-10-24")) +
geom_vline(aes(xintercept = as.POSIXct("2019-10-23 05:42:00", tz = "EST"))) +
scale_x_datetime(name = "Day",
limits = c(as.POSIXct("2019-10-10"),as.POSIXct("2019-10-24")),
breaks = seq(as.POSIXct("2019-10-10"),as.POSIXct("2019-10-24"), by = "2 day"),
labels = c("Oct 10", "Oct 12", "Oct 14", "Oct 16", "Oct 18", "Oct 20", "Oct 22","Oct 24")) +
labs(y = "Forecasted % chance of water quality event\non specified date", title = "Forecasted day of water quality (iron) event", tag = "b") +
scale_colour_discrete(name  = "Forecasted day of \n water quality event") +
ylim(0, 100) +
theme_bw() +
annotate("text", x=as.POSIXct("2019-10-21"), y=95, label= "observed water\nquality event") +
annotate("segment", x = as.POSIXct("2019-10-21"), xend = as.POSIXct("2019-10-23"), y = 95, yend = 95, colour = "black", size=0.5, alpha=1.0, arrow=arrow())
ggplot(d1, aes(x = x, y = p, color = type)) +
geom_point() +
geom_line() +
xlim(as.POSIXct("2019-10-10"),as.POSIXct("2019-10-24")) +
geom_vline(aes(xintercept = as.POSIXct("2019-10-23 05:42:00", tz = "EST"))) +
scale_x_datetime(name = "Day",
limits = c(as.POSIXct("2019-10-10"),as.POSIXct("2019-10-24")),
breaks = seq(as.POSIXct("2019-10-10"),as.POSIXct("2019-10-24"), by = "2 day"),
labels = c("Oct 10", "Oct 12", "Oct 14", "Oct 16", "Oct 18", "Oct 20", "Oct 22","Oct 24")) +
labs(y = "Forecasted % chance of water quality event\non specified date", title = "Forecasted day of water quality (iron) event", tag = "b") +
scale_colour_discrete(name  = "Forecasted day of \n water quality event") +
ylim(0, 100) +
theme_bw() +
annotate("text", x=as.POSIXct("2019-10-19"), y=95, label= "observed water\nquality event") +
annotate("segment", x = as.POSIXct("2019-10-21"), xend = as.POSIXct("2019-10-23"), y = 95, yend = 95, colour = "black", size=0.5, alpha=1.0, arrow=arrow())
d1 <- tibble(x = c(xdata[1:14]),
p = c( p_chance23[1:14]),
type = c(rep("Oct 23",length(xdata[1:14]))))
ggplot(d1, aes(x = x, y = p, color = type)) +
geom_point() +
geom_line() +
xlim(as.POSIXct("2019-10-10"),as.POSIXct("2019-10-24")) +
geom_vline(aes(xintercept = as.POSIXct("2019-10-23 05:42:00", tz = "EST"))) +
scale_x_datetime(name = "Day",
limits = c(as.POSIXct("2019-10-10"),as.POSIXct("2019-10-24")),
breaks = seq(as.POSIXct("2019-10-10"),as.POSIXct("2019-10-24"), by = "2 day"),
labels = c("Oct 10", "Oct 12", "Oct 14", "Oct 16", "Oct 18", "Oct 20", "Oct 22","Oct 24")) +
labs(y = "Forecasted % chance of water quality event\non specified date", title = "Forecasted day of water quality (iron) event", tag = "b") +
scale_colour_discrete(name  = "Forecasted day of \n water quality event") +
ylim(0, 100) +
theme_bw() +
annotate("text", x=as.POSIXct("2019-10-19"), y=95, label= "observed water\nquality event") +
annotate("segment", x = as.POSIXct("2019-10-21"), xend = as.POSIXct("2019-10-23"), y = 95, yend = 95, colour = "black", size=0.5, alpha=1.0, arrow=arrow())
ggplot(d1, aes(x = x, y = p, color = type)) +
geom_point() +
geom_line() +
xlim(as.POSIXct("2019-10-10"),as.POSIXct("2019-10-24")) +
geom_vline(aes(xintercept = as.POSIXct("2019-10-23 05:42:00", tz = "EST"))) +
scale_x_datetime(name = "Day",
limits = c(as.POSIXct("2019-10-16"),as.POSIXct("2019-10-24")),
breaks = seq(as.POSIXct("2019-10-16"),as.POSIXct("2019-10-24"), by = "2 day"),
labels = c("Oct 10", "Oct 12", "Oct 14", "Oct 16", "Oct 18", "Oct 20", "Oct 22","Oct 24")) +
labs(y = "Forecasted % chance of water quality event\non specified date", title = "Forecasted day of water quality (iron) event", tag = "b") +
scale_colour_discrete(name  = "Forecasted day of \n water quality event") +
ylim(0, 100) +
theme_bw() +
annotate("text", x=as.POSIXct("2019-10-19"), y=95, label= "observed water\nquality event") +
annotate("segment", x = as.POSIXct("2019-10-21"), xend = as.POSIXct("2019-10-23"), y = 95, yend = 95, colour = "black", size=0.5, alpha=1.0, arrow=arrow())
ggplot(d1, aes(x = x, y = p, color = type)) +
geom_point() +
geom_line() +
xlim(as.POSIXct("2019-10-10"),as.POSIXct("2019-10-24")) +
geom_vline(aes(xintercept = as.POSIXct("2019-10-23 05:42:00", tz = "EST"))) +
scale_x_datetime(name = "Day",
limits = c(as.POSIXct("2019-10-16"),as.POSIXct("2019-10-24")),
breaks = seq(as.POSIXct("2019-10-16"),as.POSIXct("2019-10-24"), by = "2 day"),
labels = c("Oct 16", "Oct 18", "Oct 20", "Oct 22","Oct 24")) +
labs(y = "Forecasted % chance of water quality event\non specified date", title = "Forecasted day of water quality (iron) event", tag = "b") +
scale_colour_discrete(name  = "Forecasted day of \n water quality event") +
ylim(0, 100) +
theme_bw() +
annotate("text", x=as.POSIXct("2019-10-19"), y=95, label= "observed water\nquality event") +
annotate("segment", x = as.POSIXct("2019-10-21"), xend = as.POSIXct("2019-10-23"), y = 95, yend = 95, colour = "black", size=0.5, alpha=1.0, arrow=arrow())
ggplot(d1, aes(x = x, y = p, color = type)) +
geom_point() +
geom_line() +
xlim(as.POSIXct("2019-10-10"),as.POSIXct("2019-10-24")) +
geom_vline(aes(xintercept = as.POSIXct("2019-10-23 05:42:00", tz = "EST"))) +
scale_x_datetime(name = "Day",
limits = c(as.POSIXct("2019-10-16"),as.POSIXct("2019-10-24")),
breaks = seq(as.POSIXct("2019-10-16"),as.POSIXct("2019-10-24"), by = "2 day"),
labels = c("Oct 16", "Oct 18", "Oct 20", "Oct 22","Oct 24")) +
labs(y = "Forecasted % chance of water quality event\non on observed date", title = "Forecasted day of water quality (iron) event", tag = "b") +
scale_colour_discrete(name  = "Forecasted day of \n water quality event") +
ylim(0, 100) +
theme_bw() +
theme(legend, title = element_blank()) +
annotate("text", x=as.POSIXct("2019-10-19"), y=95, label= "observed water\nquality event") +
annotate("segment", x = as.POSIXct("2019-10-21"), xend = as.POSIXct("2019-10-23"), y = 95, yend = 95, colour = "black", size=0.5, alpha=1.0, arrow=arrow())
ggplot(d1, aes(x = x, y = p, color = type)) +
geom_point() +
geom_line() +
theme(legend, title = element_blank()) +
xlim(as.POSIXct("2019-10-10"),as.POSIXct("2019-10-24")) +
geom_vline(aes(xintercept = as.POSIXct("2019-10-23 05:42:00", tz = "EST"))) +
scale_x_datetime(name = "Day",
limits = c(as.POSIXct("2019-10-16"),as.POSIXct("2019-10-24")),
breaks = seq(as.POSIXct("2019-10-16"),as.POSIXct("2019-10-24"), by = "2 day"),
labels = c("Oct 16", "Oct 18", "Oct 20", "Oct 22","Oct 24")) +
labs(y = "Forecasted % chance of water quality event\non on observed date", title = "Forecasted day of water quality (iron) event", tag = "b") +
scale_colour_discrete(name  = "Forecasted day of \n water quality event") +
ylim(0, 100) +
theme_bw() +
annotate("text", x=as.POSIXct("2019-10-19"), y=95, label= "observed water\nquality event") +
annotate("segment", x = as.POSIXct("2019-10-21"), xend = as.POSIXct("2019-10-23"), y = 95, yend = 95, colour = "black", size=0.5, alpha=1.0, arrow=arrow())
ggplot(d1, aes(x = x, y = p, color = type)) +
geom_point() +
geom_line() +
xlim(as.POSIXct("2019-10-10"),as.POSIXct("2019-10-24")) +
geom_vline(aes(xintercept = as.POSIXct("2019-10-23 05:42:00", tz = "EST"))) +
scale_x_datetime(name = "Day",
limits = c(as.POSIXct("2019-10-16"),as.POSIXct("2019-10-24")),
breaks = seq(as.POSIXct("2019-10-16"),as.POSIXct("2019-10-24"), by = "2 day"),
labels = c("Oct 16", "Oct 18", "Oct 20", "Oct 22","Oct 24")) +
labs(y = "Forecasted % chance of water quality event\non on observed date", title = "Forecasted day of water quality (iron) event", tag = "b") +
scale_colour_discrete(name  = "Forecasted day of \n water quality event") +
ylim(0, 100) +
theme_bw() +
theme(legend.title = element_blank()) +
annotate("text", x=as.POSIXct("2019-10-19"), y=95, label= "observed water\nquality event") +
annotate("segment", x = as.POSIXct("2019-10-21"), xend = as.POSIXct("2019-10-23"), y = 95, yend = 95, colour = "black", size=0.5, alpha=1.0, arrow=arrow())
ggplot(d1, aes(x = x, y = p, color = type)) +
geom_point() +
geom_line() +
xlim(as.POSIXct("2019-10-10"),as.POSIXct("2019-10-24")) +
geom_vline(aes(xintercept = as.POSIXct("2019-10-23 05:42:00", tz = "EST"))) +
scale_x_datetime(name = "Day",
limits = c(as.POSIXct("2019-10-16"),as.POSIXct("2019-10-24")),
breaks = seq(as.POSIXct("2019-10-16"),as.POSIXct("2019-10-24"), by = "2 day"),
labels = c("Oct 16", "Oct 18", "Oct 20", "Oct 22","Oct 24")) +
labs(y = "Forecasted % chance of water quality event\non on observed date", title = "Forecasted day of water quality (iron) event", tag = "b") +
scale_colour_discrete(name  = "Forecasted day of \n water quality event") +
ylim(0, 100) +
theme_bw() +
theme(legend.position = "none") +
annotate("text", x=as.POSIXct("2019-10-19"), y=95, label= "observed water\nquality event") +
annotate("segment", x = as.POSIXct("2019-10-21"), xend = as.POSIXct("2019-10-23"), y = 95, yend = 95, colour = "black", size=0.5, alpha=1.0, arrow=arrow())
p1 <- ggplot(d1, aes(x = x, y = p, color = type)) +
geom_point() +
geom_line() +
xlim(as.POSIXct("2019-10-10"),as.POSIXct("2019-10-24")) +
geom_vline(aes(xintercept = as.POSIXct("2019-10-23 05:42:00", tz = "EST"))) +
scale_x_datetime(name = "Day",
limits = c(as.POSIXct("2019-10-16"),as.POSIXct("2019-10-24")),
breaks = seq(as.POSIXct("2019-10-16"),as.POSIXct("2019-10-24"), by = "2 day"),
labels = c("Oct 16", "Oct 18", "Oct 20", "Oct 22","Oct 24")) +
labs(y = "Forecasted % chance of water quality\n impairment on observed date", title = "Forecasted day of water quality (iron) impairment") +
#scale_colour_discrete(name  = "Forecasted day of \n water quality event") +
ylim(0, 100) +
theme_bw() +
theme(legend.position = "none") +
annotate("text", x=as.POSIXct("2019-10-19"), y=95, label= "observed water\nquality event") +
annotate("segment", x = as.POSIXct("2019-10-21"), xend = as.POSIXct("2019-10-23"), y = 95, yend = 95, colour = "black", size=0.5, alpha=1.0, arrow=arrow())
ggsave(filename = "Multi_day_turnover_STC.pdf", device = "pdf",width = 7, height = 3.5, units = "in")
p1 <- ggplot(d1, aes(x = x, y = p, color = type)) +
geom_point() +
geom_line() +
xlim(as.POSIXct("2019-10-10"),as.POSIXct("2019-10-24")) +
geom_vline(aes(xintercept = as.POSIXct("2019-10-23 05:42:00", tz = "EST"))) +
scale_x_datetime(name = "Day",
limits = c(as.POSIXct("2019-10-16"),as.POSIXct("2019-10-24")),
breaks = seq(as.POSIXct("2019-10-16"),as.POSIXct("2019-10-24"), by = "2 day"),
labels = c("Oct 16", "Oct 18", "Oct 20", "Oct 22","Oct 24")) +
labs(y = "Forecasted % chance of water quality\n impairment on observed date", title = "Forecasted day of water quality (iron) impairment") +
#scale_colour_discrete(name  = "Forecasted day of \n water quality event") +
ylim(0, 100) +
theme_bw() +
theme(legend.position = "none") +
annotate("text", x=as.POSIXct("2019-10-19"), y=95, label= "observed water\nquality event") +
annotate("segment", x = as.POSIXct("2019-10-21"), xend = as.POSIXct("2019-10-23"), y = 95, yend = 95, colour = "black", size=0.5, alpha=1.0, arrow=arrow())
ggsave(filename = "Multi_day_turnover_STC.pdf", device = "pdf",width = 3.5, height = 2.5, units = "in")
p1 <- ggplot(d1, aes(x = x, y = p, color = type)) +
geom_point() +
geom_line() +
xlim(as.POSIXct("2019-10-10"),as.POSIXct("2019-10-24")) +
geom_vline(aes(xintercept = as.POSIXct("2019-10-23 05:42:00", tz = "EST"))) +
scale_x_datetime(name = "Day",
limits = c(as.POSIXct("2019-10-16"),as.POSIXct("2019-10-24")),
breaks = seq(as.POSIXct("2019-10-16"),as.POSIXct("2019-10-24"), by = "2 day"),
labels = c("Oct 16", "Oct 18", "Oct 20", "Oct 22","Oct 24")) +
labs(y = "Forecasted % chance of water quality\n impairment on observed date", title = "Forecasted day of water quality (iron) impairment") +
#scale_colour_discrete(name  = "Forecasted day of \n water quality event") +
ylim(0, 100) +
theme_bw() +
theme(legend.position = "none") +
annotate("text", x=as.POSIXct("2019-10-19"), y=95, label= "observed water\nquality event") +
annotate("segment", x = as.POSIXct("2019-10-21"), xend = as.POSIXct("2019-10-23"), y = 95, yend = 95, colour = "black", size=0.5, alpha=1.0, arrow=arrow())
ggsave(filename = "Multi_day_turnover_STC.pdf", device = "pdf",width = 4, height = 3, units = "in")
p1 <- ggplot(d1, aes(x = x, y = p, color = type)) +
geom_point() +
geom_line() +
xlim(as.POSIXct("2019-10-10"),as.POSIXct("2019-10-24")) +
geom_vline(aes(xintercept = as.POSIXct("2019-10-23 05:42:00", tz = "EST"))) +
scale_x_datetime(name = "Day",
limits = c(as.POSIXct("2019-10-16"),as.POSIXct("2019-10-24")),
breaks = seq(as.POSIXct("2019-10-16"),as.POSIXct("2019-10-24"), by = "2 day"),
labels = c("Oct 16", "Oct 18", "Oct 20", "Oct 22","Oct 24")) +
labs(y = "Forecasted % chance of water quality\n impairment on observed date", title = "Forecasted day of water quality (iron) impairment") +
#scale_colour_discrete(name  = "Forecasted day of \n water quality event") +
ylim(0, 100) +
theme_bw() +
theme(legend.position = "none") +
annotate("text", x=as.POSIXct("2019-10-20"), y=95, label= "observed water\nquality event") +
annotate("segment", x = as.POSIXct("2019-10-21"), xend = as.POSIXct("2019-10-23"), y = 95, yend = 95, colour = "black", size=0.5, alpha=1.0, arrow=arrow())
ggsave(filename = "Multi_day_turnover_STC.pdf", device = "pdf",width = 4, height = 3, units = "in")
p1 <- ggplot(d1, aes(x = x, y = p, color = type)) +
geom_point() +
geom_line() +
xlim(as.POSIXct("2019-10-10"),as.POSIXct("2019-10-24")) +
geom_vline(aes(xintercept = as.POSIXct("2019-10-23 05:42:00", tz = "EST"))) +
scale_x_datetime(name = "Day",
limits = c(as.POSIXct("2019-10-16"),as.POSIXct("2019-10-24")),
breaks = seq(as.POSIXct("2019-10-16"),as.POSIXct("2019-10-24"), by = "2 day"),
labels = c("Oct 16", "Oct 18", "Oct 20", "Oct 22","Oct 24")) +
labs(y = "Forecasted % chance of water quality\n impairment on observed date", title = "Forecasted day of water quality (iron) impairment") +
#scale_colour_discrete(name  = "Forecasted day of \n water quality event") +
ylim(0, 100) +
theme_bw() +
theme(legend.position = "none") +
annotate("text", x=as.POSIXct("2019-10-20"), y=95, label= "observed water\nquality event") +
annotate("segment", x = as.POSIXct("2019-10-22"), xend = as.POSIXct("2019-10-23"), y = 95, yend = 95, colour = "black", size=0.5, alpha=1.0, arrow=arrow())
ggsave(filename = "Multi_day_turnover_STC.pdf", device = "pdf",width = 4, height = 3, units = "in")
p1 <- ggplot(d1, aes(x = x, y = p, color = type)) +
geom_point() +
geom_line() +
xlim(as.POSIXct("2019-10-10"),as.POSIXct("2019-10-24")) +
geom_vline(aes(xintercept = as.POSIXct("2019-10-23 05:42:00", tz = "EST"))) +
scale_x_datetime(name = "Day",
limits = c(as.POSIXct("2019-10-16"),as.POSIXct("2019-10-24")),
breaks = seq(as.POSIXct("2019-10-16"),as.POSIXct("2019-10-24"), by = "2 day"),
labels = c("Oct 16", "Oct 18", "Oct 20", "Oct 22","Oct 24")) +
labs(y = "Forecasted % chance of water quality\n impairment on observed date", title = "Forecasted day of water quality (iron) impairment") +
#scale_colour_discrete(name  = "Forecasted day of \n water quality event") +
ylim(0, 100) +
theme_bw() +
theme(legend.position = "none") +
annotate("text", x=as.POSIXct("2019-10-21"), y=95, label= "observed water\nquality event") +
annotate("segment", x = as.POSIXct("2019-10-22"), xend = as.POSIXct("2019-10-23"), y = 95, yend = 95, colour = "black", size=0.5, alpha=1.0, arrow=arrow())
ggsave(filename = "Multi_day_turnover_STC.pdf", device = "pdf",width = 4, height = 3, units = "in")
p1 <- ggplot(d1, aes(x = x, y = p, color = type)) +
geom_point() +
geom_line() +
xlim(as.POSIXct("2019-10-10"),as.POSIXct("2019-10-24")) +
geom_vline(aes(xintercept = as.POSIXct("2019-10-23 05:42:00", tz = "EST"))) +
scale_x_datetime(name = "Day",
limits = c(as.POSIXct("2019-10-16"),as.POSIXct("2019-10-24")),
breaks = seq(as.POSIXct("2019-10-16"),as.POSIXct("2019-10-24"), by = "2 day"),
labels = c("Oct 16", "Oct 18", "Oct 20", "Oct 22","Oct 24")) +
labs(y = "Forecasted % chance of water quality\n impairment on observed date", title = "Forecasted day of water quality (iron) impairment") +
#scale_colour_discrete(name  = "Forecasted day of \n water quality event") +
ylim(0, 100) +
theme_bw() +
theme(legend.position = "none") +
annotate("text", x=as.POSIXct("2019-10-20 12:00:00"), y=95, label= "observed water\nquality event") +
annotate("segment", x = as.POSIXct("2019-10-22"), xend = as.POSIXct("2019-10-23"), y = 95, yend = 95, colour = "black", size=0.5, alpha=1.0, arrow=arrow())
ggsave(filename = "Multi_day_turnover_STC.pdf", device = "pdf",width = 4, height = 3, units = "in")
ggplot(d1, aes(x = x, y = p, color = type)) +
geom_point() +
geom_line() +
xlim(as.POSIXct("2019-10-10"),as.POSIXct("2019-10-24")) +
geom_vline(aes(xintercept = as.POSIXct("2019-10-23 05:42:00", tz = "EST"))) +
scale_x_datetime(name = "Day",
limits = c(as.POSIXct("2019-10-16"),as.POSIXct("2019-10-24")),
breaks = seq(as.POSIXct("2019-10-16"),as.POSIXct("2019-10-24"), by = "2 day"),
labels = c("Oct 16", "Oct 18", "Oct 20", "Oct 22","Oct 24")) +
labs(y = "Forecasted % chance of water quality\n impairment on observed date", title = "Forecasted water quality\n(iron) impairment") +
#scale_colour_discrete(name  = "Forecasted day of \n water quality event") +
ylim(0, 100) +
theme_bw() +
theme(legend.position = "none") +
annotate("text", x=as.POSIXct("2019-10-20 12:00:00"), y=95, label= "observed water\nquality event") +
annotate("segment", x = as.POSIXct("2019-10-22"), xend = as.POSIXct("2019-10-23"), y = 95, yend = 95, colour = "black", size=0.5, alpha=1.0, arrow=arrow())
p1 <- ggplot(d1, aes(x = x, y = p, color = type)) +
geom_point() +
geom_line() +
xlim(as.POSIXct("2019-10-10"),as.POSIXct("2019-10-24")) +
geom_vline(aes(xintercept = as.POSIXct("2019-10-23 05:42:00", tz = "EST"))) +
scale_x_datetime(name = "Day",
limits = c(as.POSIXct("2019-10-16"),as.POSIXct("2019-10-24")),
breaks = seq(as.POSIXct("2019-10-16"),as.POSIXct("2019-10-24"), by = "2 day"),
labels = c("Oct 16", "Oct 18", "Oct 20", "Oct 22","Oct 24")) +
labs(y = "Forecasted % chance of water quality\n impairment on observed date", title = "Forecasted water quality\n(iron) impairment") +
#scale_colour_discrete(name  = "Forecasted day of \n water quality event") +
ylim(0, 100) +
theme_bw() +
theme(legend.position = "none") +
annotate("text", x=as.POSIXct("2019-10-20 12:00:00"), y=95, label= "observed water\nquality event") +
annotate("segment", x = as.POSIXct("2019-10-22"), xend = as.POSIXct("2019-10-23"), y = 95, yend = 95, colour = "black", size=0.5, alpha=1.0, arrow=arrow())
ggsave(filename = "Multi_day_turnover_STC.pdf", device = "pdf",width = 4, height = 3, units = "in")
p1 <- ggplot(d1, aes(x = x, y = p, color = type)) +
geom_point() +
geom_line() +
xlim(as.POSIXct("2019-10-10"),as.POSIXct("2019-10-24")) +
geom_vline(aes(xintercept = as.POSIXct("2019-10-23 05:42:00", tz = "EST"))) +
scale_x_datetime(name = "Day",
limits = c(as.POSIXct("2019-10-16"),as.POSIXct("2019-10-24")),
breaks = seq(as.POSIXct("2019-10-16"),as.POSIXct("2019-10-24"), by = "2 day"),
labels = c("Oct 16", "Oct 18", "Oct 20", "Oct 22","Oct 24")) +
labs(y = "Forecasted % chance of water quality\n impairment on observed date", title = "Forecasted water quality (iron) impairment") +
#scale_colour_discrete(name  = "Forecasted day of \n water quality event") +
ylim(0, 100) +
theme_bw() +
theme(legend.position = "none") +
annotate("text", x=as.POSIXct("2019-10-20 12:00:00"), y=95, label= "observed water\nquality event") +
annotate("segment", x = as.POSIXct("2019-10-22"), xend = as.POSIXct("2019-10-23"), y = 95, yend = 95, colour = "black", size=0.5, alpha=1.0, arrow=arrow())
ggsave(filename = "Multi_day_turnover_STC.pdf", device = "pdf",width = 4, height = 3, units = "in")
p1 <- ggplot(d1, aes(x = x, y = p, color = type)) +
geom_point() +
geom_line() +
xlim(as.POSIXct("2019-10-10"),as.POSIXct("2019-10-24")) +
geom_vline(aes(xintercept = as.POSIXct("2019-10-23 05:42:00", tz = "EST"))) +
scale_x_datetime(name = "Day",
limits = c(as.POSIXct("2019-10-16"),as.POSIXct("2019-10-24")),
breaks = seq(as.POSIXct("2019-10-16"),as.POSIXct("2019-10-24"), by = "2 day"),
labels = c("Oct 16", "Oct 18", "Oct 20", "Oct 22","Oct 24")) +
labs(y = "Forecasted % chance of water quality\n impairment on observed date", title = "Forecasted water quality (iron) impairment") +
#scale_colour_discrete(name  = "Forecasted day of \n water quality event") +
ylim(0, 100) +
theme_bw() +
theme(legend.position = "none") +
annotate("text", x=as.POSIXct("2019-10-20 12:00:00"), y=95, label= "observed water\nquality event") +
annotate("segment", x = as.POSIXct("2019-10-22"), xend = as.POSIXct("2019-10-23"), y = 95, yend = 95, colour = "black", size=0.5, alpha=1.0, arrow=arrow())
ggsave(filename = "Multi_day_turnover_STC.pdf", device = "pdf",width = 4.2, height = 3, units = "in")
